== Installation ==
The following python packages are required:
*logging
*json
*lxml
*subprocess
*datetime
*argparse
*copy
*collections
*numpy
*matplotlib

Under Ubuntu it is normally sufficient to install:
	sudo apt-get install python-argparse python-matplotlib python-lxml python-numpy

== Setup ==
The io_perf_test checks if FIO is findable with:
	$ which fio
Please ensure that FIO is in your path and executable.

== Running a test ==
* Suppose the following directory setup:
-io_perf_test
	-src
	-doc
	-examples
	-pics
	
* The main script file is located under:
	io_perf_test/src/perfTest/runTest.py
* You have to modify your PYTHONPATH so that the other packages can be loaded:
	$ export PYTHONPATH=io_perf_test/src/

* To run the test you need root privilieges. To preserve the PYTHONPATH with 'sudo' use:
	$ sudo PYTHONPATH=$PYTHONPATH python runTest.py

=== Examples ===
$ nohup python ../runTest.py ssd intel320 /dev/sde -ft -nj 2 -iod 16 -rfb 1>runTest.out 2>runTest.err &

== Generate a PDF report ==
* To generate a pdf from the rst use rst2pdf:
	$ rst2pdf test.rst test.pdf

== Loading from XML ==
* To load an already carried out test from the generated xml file, use the '-xml' option:
	$ sudo PYTHONPATH=$PYTHONPATH python runTest.py ssd intel520 /dev/sdb1 -xml
* In this case nothing happens with /dev/sdb1, it is just there as a placeholder.
* Loading from an xml file is useful if something has changed in the plotting methods and you
want to re-plot the results.

== Help Text ==
usage: runTest.py [-h] [-v] [-d] [-q] [-nj NUMJOBS] [-iod IODEPTH] [-xml]
                  [-rfb] [-dsc DESC_FILE] [-ft] [-fm FEATURE_MATRIX]
                  {hdd,ssd} testname filename

positional arguments:
  {hdd,ssd}             specify the test mode for the device
  testname              name of the fio job, corresponds to the result output
                        file
  filename              device name to run fio test on

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         get the version information
  -d, --debug           get detailed debug information
  -q, --quiet           turn off logging of info messages
  -nj NUMJOBS, --numjobs NUMJOBS
                        specify number of jobs for fio
  -iod IODEPTH, --iodepth IODEPTH
                        specify iodepth for libaio used by fio
  -xml, --fromxml       don't run tests but load test objects from xml file
  -rfb, --refill_buffers
                        use Fio's refill buffers option to circumvent any
                        compression of devices
  -dsc DESC_FILE, --desc_file DESC_FILE
                        use a description file for the tested device if hdparm
                        doesn't work correctly
  -ft, --force_test     skip checks if the used device is mounted, don't print
                        warnings and force starting the test
  -fm FEATURE_MATRIX, --feature_matrix FEATURE_MATRIX
                        add a feature matrix of the given device to the report
